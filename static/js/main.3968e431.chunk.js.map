{"version":3,"sources":["components/Loading/index.tsx","components/CustomRoute/index.tsx","routes/index.tsx","App.tsx","index.tsx","redux/actions/auth.actionTypes.tsx","redux/actions/auth.actions.tsx","redux/actions/todos.actionTypes.tsx","redux/actions/todos.actions.tsx","redux/actions/photos.actionTypes.tsx","redux/actions/photos.actions.tsx","utils/helper/createActionTypes.tsx","utils/const.tsx","redux/actions/user.actionTypes.tsx","redux/state/auth.state.tsx","redux/state/user.state.tsx","redux/state/todos.state.tsx","redux/state/photos.state.tsx","redux/state/index.tsx","redux/state/router.state.tsx","redux/reducers/index.tsx","redux/reducers/auth.reducer.tsx","redux/reducers/user.reducer.tsx","redux/reducers/todos.reducer.tsx","redux/reducers/photos.reducer.tsx","redux/index.tsx","utils/helper/axios.tsx","database/configs/firebase.js","database/getErrorMessage.tsx","utils/helper/authorizationToken.tsx","utils/helper/localStorage.tsx","database/index.tsx","redux/actions/user.actions.tsx"],"names":["StyledRoot","styled","div","position","top","left","transform","Loading","CircularProgress","CustomRoute","component","isPrivate","componentProps","rest","ComponentToRender","useAuthState","auth","user","loading","userHasAccess","render","props","to","pathname","LOGIN_PATH","state","from","location","Login","React","lazy","Register","Dashboard","NotFound","Routes","dispatch","useDispatch","useEffect","push","window","fallback","history","exact","path","REGISTER_PATH","DASHBOARD_PATHS","store","configureStore","App","node","document","getElementById","AppComponent","StrictMode","ReactDOM","actionTypes","createActionTypes","Object","values","SIGN_IN_STARTED","SIGN_IN_SUCCESS","SIGN_IN_FAILED","SIGN_UP_STARTED","SIGN_UP_SUCCESS","SIGN_UP_FAILED","SIGN_OUT","signInStarted","type","signInSuccess","signInFailed","errorMessage","payload","signUpStarted","signUpSuccess","signUpFailed","signOut","FETCH_STARTED","FETCH_SUCCESS","FETCH_FAILED","fetchStarted","fetchSuccess","fetchFailed","getActionTypes","namespace","types","reduce","acc","createActionType","DASHBOARD_PATH","TODOS_PATH","PHOTOS_PATH","STORE_USER_DATA","REMOVE_USER_DATA","initialAuthState","signInErrorMessage","signUpErrorMessage","initialUserState","initialTodosState","list","initialState","router","search","hash","query","action","todos","photos","reducers","combinedReducers","combineReducers","connectRouter","createBrowserHistory","basename","process","middlewares","applyMiddleware","routerMiddleware","thunk","createStore","createRootReducer","composeWithDevTools","axiosInstance","axios","create","baseURL","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getErrorMessage","code","setAuthToken","token","key","value","timestamp","Date","getTime","localStorage","setItem","JSON","stringify","storageSaveItem","defaults","headers","common","Authorization","removeItem","saveAuthToken","app","initializeApp","getAuth","db","getFirestore","signIn","email","password","a","signInWithEmailAndPassword","res","getUser","uid","userData","saveUserToken","console","error","message","name","Error","signUp","firstName","lastName","createUserWithEmailAndPassword","usersCollection","collection","addDoc","userId","q","where","limit","getDocs","querySnapshot","data","forEach","doc","getIdToken","storeUserData","removeUserData"],"mappings":"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","file":"static/js/main.3968e431.chunk.js","sourcesContent":["import React from 'react'\nimport styled from '@emotion/styled'\nimport { CircularProgress } from '@mui/material';\n\nconst StyledRoot = styled.div({\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n})\n\nconst Loading = () => (\n  <StyledRoot>\n    <CircularProgress />\n  </StyledRoot>\n)\n\nexport default Loading","import  React from  \"react\";\r\nimport { Route, Redirect } from  \"react-router-dom\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\n\r\nimport { auth } from \"../../database\";\r\nimport { LOGIN_PATH } from \"../../utils/const\";\r\n\r\nimport Loading from '../Loading'\r\n\r\ninterface IProps {\r\n  component: React.ComponentType<any>;\r\n  path: string | string[];\r\n  isPrivate?: boolean;\r\n  exact?: boolean;\r\n  componentProps?: any;\r\n}\r\n\r\nconst CustomRoute: React.FC<IProps> = ({\r\n  component,\r\n  isPrivate = false,\r\n  componentProps,\r\n  ...rest\r\n}) => {\r\n\r\n  const ComponentToRender = component;\r\n  const [user, loading] = useAuthState(auth);\r\n  let userHasAccess = user !== null;\r\n\r\n  return (\r\n    !loading ?\r\n    <Route \r\n      {...rest} \r\n      render={(props) => userHasAccess || !isPrivate ?\r\n        <ComponentToRender {...props} {...componentProps} /> :\r\n        <Redirect to={{ pathname: LOGIN_PATH, state: {from: props.location} }} />\r\n      }\r\n    /> : <Loading />\r\n  )\r\n\r\n};\r\n\r\nexport default CustomRoute;","import React, { Suspense, useEffect } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { useDispatch } from \"react-redux\";\nimport { ConnectedRouter as Router, push } from 'connected-react-router'\n\nimport { history } from '../redux'\nimport { LOGIN_PATH, REGISTER_PATH, DASHBOARD_PATHS } from '../utils/const'\nimport CustomRoute from '../components/CustomRoute'\nimport Loading from '../components/Loading'\n\nconst Login = React.lazy(() => import('./login.route'))\nconst Register = React.lazy(() => import('./register.route'))\nconst Dashboard = React.lazy(() => import('./dashboard.route'))\nconst NotFound = React.lazy(() => import('./notFound.route'))\n\nconst Routes = () => {\n\n  const dispatch = useDispatch()\n\n  // Manually dispatch action at first render\n  // fix initial pathname value in redux state\n  useEffect(() => {\n    dispatch(push({ pathname: window.location.pathname }))\n  }, [dispatch])\n\n  return (\n    <Suspense fallback={(<Loading />)}>\n      <Router history={history}>\n        <Switch>\n          <CustomRoute exact path={LOGIN_PATH} component={Login} />\n          <CustomRoute exact path={REGISTER_PATH} component={Register} />\n          <CustomRoute exact path={DASHBOARD_PATHS} component={Dashboard} isPrivate />\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n    </Suspense>\n  )\n}\n\nexport default Routes\n","import React from 'react';\nimport { Provider } from 'react-redux'\n\nimport configureStore from './redux'\nimport Routes from './routes'\n\nconst store = configureStore()\n\nfunction App() {\n\n  return (\n    <Provider store={store}>\n      <Routes />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst node = document.getElementById('root')\n\nconst AppComponent = (\n  \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n)\n\nReactDOM.render(AppComponent, node);\n","import createActionTypes from '../../utils/helper/createActionTypes'\n\nconst namespace = 'AUTH'\n\nconst types = {\n  SIGN_IN_STARTED: 'SIGN_IN_STARTED',\n  SIGN_IN_SUCCESS: 'SIGN_IN_SUCCESS',\n  SIGN_IN_FAILED: 'SIGN_IN_FAILED',\n  SIGN_UP_STARTED: 'SIGN_UP_STARTED',\n  SIGN_UP_SUCCESS: 'SIGN_UP_SUCCESS',\n  SIGN_UP_FAILED: 'SIGN_UP_FAILED',\n  SIGN_OUT: 'SIGN_OUT',\n}\n\nexport type TActionTypes = {\n  [key in keyof typeof types]: `${typeof namespace}/${key}`\n}\n\nexport const actionTypes: TActionTypes = createActionTypes(namespace, Object.values(types))","import { actionTypes } from \"./auth.actionTypes\"\n\nexport const signInStarted = () => ({\n  type: actionTypes.SIGN_IN_STARTED\n})\n\nexport const signInSuccess = () => ({\n  type: actionTypes.SIGN_IN_SUCCESS\n})\n\nexport const signInFailed = (errorMessage: string) => ({\n  type: actionTypes.SIGN_IN_FAILED,\n  payload: errorMessage,\n})\n\nexport const signUpStarted = () => ({\n  type: actionTypes.SIGN_UP_STARTED\n})\n\nexport const signUpSuccess = () => ({\n  type: actionTypes.SIGN_UP_SUCCESS\n})\n\nexport const signUpFailed = (errorMessage: string) => ({\n  type: actionTypes.SIGN_UP_FAILED,\n  payload: errorMessage,\n})\n\nexport const signOut = () => ({\n  type: actionTypes.SIGN_OUT\n})","import createActionTypes from '../../utils/helper/createActionTypes'\n\nconst namespace = 'TODOS'\n\nconst types = {\n  FETCH_STARTED: 'FETCH_STARTED',\n  FETCH_SUCCESS: 'FETCH_SUCCESS',\n  FETCH_FAILED: 'FETCH_FAILED',\n}\n\nexport type TActionTypes = {\n  [key in keyof typeof types]: `${typeof namespace}/${key}`\n}\n\nexport const actionTypes: TActionTypes = createActionTypes(namespace, Object.values(types))","import { actionTypes } from \"./todos.actionTypes\"\n\nexport const fetchStarted = () => ({\n  type: actionTypes.FETCH_STARTED\n})\n\nexport const fetchSuccess = (payload: any) => ({\n  type: actionTypes.FETCH_SUCCESS,\n  payload,\n})\n\nexport const fetchFailed = () => ({\n  type: actionTypes.FETCH_FAILED\n})","import createActionTypes from '../../utils/helper/createActionTypes'\n\nconst namespace = 'PHOTOS'\n\nconst types = {\n  FETCH_STARTED: 'FETCH_STARTED',\n  FETCH_SUCCESS: 'FETCH_SUCCESS',\n  FETCH_FAILED: 'FETCH_FAILED',\n}\n\nexport type TActionTypes = {\n  [key in keyof typeof types]: `${typeof namespace}/${key}`\n}\n\nexport const actionTypes: TActionTypes = createActionTypes(namespace, Object.values(types))","import { actionTypes } from \"./photos.actionTypes\"\n\nexport const fetchStarted = () => ({\n  type: actionTypes.FETCH_STARTED\n})\n\nexport const fetchSuccess = (payload: any) => ({\n  type: actionTypes.FETCH_SUCCESS,\n  payload,\n})\n\nexport const fetchFailed = () => ({\n  type: actionTypes.FETCH_FAILED\n})","type Ttype = string;\ntype Tnamespace = string;\n\nconst createActionType = (namespace: Tnamespace, type: Ttype) => `${namespace}/${type}`\n\nfunction getActionTypes<ReturnType>(namespace: Tnamespace, types: Ttype[]) {\n  \n  return types.reduce((acc, type) => ({\n    ...acc,\n    [type]: createActionType(namespace, type),\n  }), {}) as ReturnType\n}\n\nexport default getActionTypes;","// Routes\nexport const LOGIN_PATH = '/login'\nexport const REGISTER_PATH = '/register'\nexport const DASHBOARD_PATH = '/'\nexport const TODOS_PATH = '/'\nexport const PHOTOS_PATH = '/photos'\nexport const DASHBOARD_PATHS = [TODOS_PATH, PHOTOS_PATH]","import createActionTypes from '../../utils/helper/createActionTypes'\n\nconst namespace = 'USER'\n\nconst types = {\n  STORE_USER_DATA: 'STORE_USER_DATA',\n  REMOVE_USER_DATA: 'REMOVE_USER_DATA',\n}\n\nexport type TActionTypes = {\n  [key in keyof typeof types]: `${typeof namespace}/${key}`\n}\n\nexport const actionTypes: TActionTypes = createActionTypes(namespace, Object.values(types))\n\nexport interface IStoreUserDataPayload {\n  email: string,\n  firstName: string,\n  lastName: string,\n}","const initialAuthState = {\n  signInStarted: false,\n  signInSuccess: false,\n  signInFailed: false,\n  signInErrorMessage: null,\n  signUpStarted: false,\n  signUpSuccess: false,\n  signUpFailed: false,\n  signUpErrorMessage: null,\n}\n\nexport type TAuthState = Omit<typeof initialAuthState, 'signInErrorMessage'|'signUpErrorMessage'> & \n  { signInErrorMessage: string | null, signUpErrorMessage: string | null }\n\nexport default initialAuthState","const initialUserState: TUserState = null\n\nexport type TUserState = {\n  email: string,\n  firstName: string,\n  lastName: string,\n} | null\n\nexport default initialUserState","export type TTodosList = {\n  userId: number,\n  id: number,\n  title: string,\n  completed: boolean\n}[]\n\nexport type TTodosState = {\n  list: TTodosList,\n  fetchStarted: boolean,\n  fetchSuccess: boolean,\n  fetchFailed: boolean,\n}\n\nconst initialTodosState: TTodosState = {\n  list: [],\n  fetchStarted: false,\n  fetchSuccess: false,\n  fetchFailed: false,\n}\n\nexport default initialTodosState","export type TPhotosList = {\n  albumId: number,\n  id: number,\n  title: string,\n  url: string,\n  thumbnailUrl: string,\n}[]\n\nexport type TPhotosState = {\n  list: TPhotosList,\n  fetchStarted: boolean,\n  fetchSuccess: boolean,\n  fetchFailed: boolean,\n}\n\nconst initialTodosState: TPhotosState = {\n  list: [],\n  fetchStarted: false,\n  fetchSuccess: false,\n  fetchFailed: false,\n}\n\nexport default initialTodosState","import auth, { TAuthState } from './auth.state'\nimport user, { TUserState } from './user.state'\nimport router, { TRouterState } from './router.state'\nimport todos, { TTodosState, TTodosList } from './todos.state'\nimport photos, { TPhotosState, TPhotosList } from './photos.state'\n\nconst initialState = {\n  auth,\n  user,\n  router,\n  todos,\n  photos,\n}\n\ntype TState = typeof initialState\n\nexport {\n  auth,\n  user,\n  router,\n  todos,\n  photos\n}\n\nexport type {\n  TAuthState,\n  TUserState,\n  TRouterState,\n  TTodosState,\n  TTodosList,\n  TPhotosState,\n  TPhotosList,\n  TState,\n}\n\nexport default initialState","import { RouterState } from 'connected-react-router'\n\nexport type TRouterState = RouterState\n\nconst initialRouterState: TRouterState = {\n  location: {\n    pathname: '',\n    search: '',\n    state: '',\n    hash: '',\n    query: {},\n  },\n  action: 'PUSH',\n}\n\nexport default initialRouterState","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\n\nimport auth from './auth.reducer'\nimport user from './user.reducer'\nimport todos from './todos.reducer'\nimport photos from './photos.reducer'\n\nexport const reducers = {\n  auth,\n  user,\n  todos,\n  photos,\n}\n\nconst combinedReducers = (history: any) => combineReducers({\n  router: connectRouter(history),\n  ...reducers,\n})\n\nexport default combinedReducers","import { auth as initialState, TAuthState } from '../state'\nimport { authTypes as types } from '../actions'\nimport { IAction } from '../../utils/helper/typesGenerics'\n\nexport type TAction = IAction<typeof types, string | null>\n\nexport default function reducer(state: TAuthState = initialState, action: TAction): TAuthState {\n  switch (action.type) {\n    case types.SIGN_IN_STARTED: {\n      return {\n        ...state,\n        signInStarted: true,\n        signInSuccess: false,\n        signInFailed: false,\n        signInErrorMessage: null,\n      }\n    }\n    case types.SIGN_IN_SUCCESS: {\n      return {\n        ...state,\n        signInStarted: false,\n        signInSuccess: true,\n        signInErrorMessage: null,\n      }\n    }\n    case types.SIGN_IN_FAILED: {\n      return {\n        ...state,\n        signInStarted: false,\n        signInFailed: true,\n        signInErrorMessage: action.payload,\n      }\n    }\n    case types.SIGN_UP_STARTED: {\n      return {\n        ...state,\n        signUpStarted: true,\n        signUpSuccess: false,\n        signUpFailed: false,\n        signUpErrorMessage: null,\n      }\n    }\n    case types.SIGN_UP_SUCCESS: {\n      return {\n        ...state,\n        signUpSuccess: true,\n        signUpStarted: false,\n        signUpErrorMessage: null,\n      }\n    }\n    case types.SIGN_UP_FAILED: {\n      return {\n        ...state,\n        signUpFailed: true,\n        signUpStarted: false,\n        signUpErrorMessage: action.payload,\n      }\n    }\n    case types.SIGN_OUT: {\n      return {\n        ...initialState,\n      }\n    }\n    default:\n      return state\n  }\n}\n\n\n","import { user as initialState, TUserState } from '../state'\nimport { userTypes as types } from '../actions'\nimport { IAction } from '../../utils/helper/typesGenerics'\n\ntype TAction = IAction<typeof types, Exclude<TUserState,null>>\n\nexport default function reducer(state: TUserState = initialState, action: TAction): TUserState {\n  switch (action.type) {\n    case types.STORE_USER_DATA: {\n      return {\n        ...action.payload\n      }\n    }\n    case types.REMOVE_USER_DATA: {\n      return null\n    }\n    default:\n      return state\n  }\n}\n\n\n","import { todos as initialState, TTodosState, TTodosList } from '../state'\nimport { todosTypes as types } from '../actions'\nimport { IAction } from '../../utils/helper/typesGenerics'\n\ntype TAction = IAction<typeof types, TTodosList>\n\nexport default function reducer(state: TTodosState = initialState, action: TAction): TTodosState {\n  switch (action.type) {\n    case types.FETCH_STARTED: {\n      return {\n        ...state,\n        fetchStarted: true,\n        fetchSuccess: false,\n        fetchFailed: false,\n      }\n    }\n    case types.FETCH_SUCCESS: {\n      return {\n        ...state,\n        list: action.payload,\n        fetchStarted: false,\n        fetchSuccess: true,\n      }\n    }\n    case types.FETCH_FAILED: {\n      return {\n        ...state,\n        list: [],\n        fetchStarted: false,\n        fetchFailed: true,\n      }\n    }\n    default:\n      return state\n  }\n}\n","import { photos as initialState, TPhotosState, TPhotosList } from '../state'\nimport { photosTypes as types } from '../actions'\nimport { IAction } from '../../utils/helper/typesGenerics'\n\nexport type TAction = IAction<typeof types, TPhotosList>\n\nexport default function reducer(state: TPhotosState = initialState, action: TAction): TPhotosState {\n  switch (action.type) {\n    case types.FETCH_STARTED: {\n      return {\n        ...state,\n        fetchStarted: true,\n        fetchSuccess: false,\n        fetchFailed: false,\n      }\n    }\n    case types.FETCH_SUCCESS: {\n      return {\n        ...state,\n        list: action.payload,\n        fetchStarted: false,\n        fetchSuccess: true,\n      }\n    }\n    case types.FETCH_FAILED: {\n      return {\n        ...state,\n        list: [],\n        fetchStarted: false,\n        fetchFailed: true,\n      }\n    }\n    default:\n      return state\n  }\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { routerMiddleware } from 'connected-react-router'\nimport { createBrowserHistory } from 'history'\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport initialState from './state'\nimport createRootReducer from './reducers'\n\nexport const history = createBrowserHistory({ basename: process.env.PUBLIC_URL })\n\nexport default function configureStore() {\n  const middlewares = applyMiddleware(\n    routerMiddleware(history),\n    thunk,\n  )\n\n  const store = createStore(\n    createRootReducer(history),\n    initialState,\n    composeWithDevTools(middlewares),\n  )\n\n  return store\n}\n","import axios from 'axios';\n\nconst axiosInstance = axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com/'\n});\n\nexport default axiosInstance\n","const firebaseConfig = {\n  apiKey: \"AIzaSyAzr933HQSKHmpCcJDipwa_4RPhefQGXz0\",\n  authDomain: \"dashboard-admin-auth.firebaseapp.com\",\n  projectId: \"dashboard-admin-auth\",\n  storageBucket: \"dashboard-admin-auth.appspot.com\",\n  messagingSenderId: \"692022730275\",\n  appId: \"1:692022730275:web:6ebe01703886a65f639b96\"\n};\n\nexport default firebaseConfig","type TErrorCode = 'auth/wrong-password' | 'auth/user-not-found' | 'auth/too-many-requests' | 'auth/email-already-exists'\n\nconst getErrorMessage = (code: TErrorCode) => {\n  switch(code){\n    case 'auth/wrong-password':\n    case 'auth/user-not-found':\n      return 'Login failed. Email or password not valid.'\n    case 'auth/too-many-requests':\n      return 'Access to this account has been temporarily disabled due to many failed login attempts. Try again later.'\n    case 'auth/email-already-exists':\n      return 'Registration failed. Email already exists.'\n    default:\n      return 'An error has occurred. Please try again later.'\n  }\n}\n\nexport default getErrorMessage","import axios from './axios'\nimport { storageGetItemValue, storageRemoveItem, storageSaveItem } from './localStorage'\n\nfunction setAuthToken(token: string | null) {\n  if (token) {\n    storageSaveItem('authToken', token)\n    axios.defaults.headers.common.Authorization = token\n  }\n  else {\n    storageRemoveItem('authToken')\n    delete axios.defaults.headers.common.Authorization\n  }\n}\n\nexport const saveAuthToken = (token: string) => setAuthToken(token)\n\nexport const deleteAuthToken = () => setAuthToken(null)\n\nexport const getAuthToken = () => storageGetItemValue('authToken')","\r\n// ----------------------------\r\n// LOCAL STORAGE\r\n// ----------------------------\r\n\r\n// Save object\r\nexport function storageSaveItem(key: string, value: any) {\r\n  var timestamp = new Date().getTime();\r\n  localStorage.setItem(key, JSON.stringify({ value: value, timestamp: timestamp }));\r\n}\r\n\r\n// Get object\r\nexport function storageGetItem(key: string) {\r\n  if(!localStorage.getItem(key))  return null;\r\n  try { \r\n      return JSON.parse(localStorage.getItem(key) || '[]');\r\n  } catch (e) { \r\n      return localStorage.getItem(key);\r\n  }\r\n}\r\n\r\n// Get object value\r\nexport function storageGetItemValue (key: string) {\r\n  const item = storageGetItem(key);\r\n  if(item === null) return null;\r\n  if(item.value === undefined)  return item;\r\n  try {\r\n      return JSON.parse(item.value);\r\n  } catch (e) {\r\n      return item.value;\r\n  }\r\n}\r\n\r\n// Remove object\r\nexport function storageRemoveItem(key: string) {\r\n  localStorage.removeItem(key);\r\n}\r\n\r\n","import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword, User } from \"firebase/auth\"\nimport { getFirestore, collection, getDocs, addDoc, query, where, limit } from 'firebase/firestore/lite'\nimport firebaseConfig from './configs/firebase'\nimport getErrorMessage from \"./getErrorMessage\";\nimport { deleteAuthToken, saveAuthToken } from '../utils/helper/authorizationToken'\n\ninterface IUser {\n  uid: string,\n  firstName: string,\n  lastName: string,\n  email: string,\n  password: string,\n}\n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\nconst signIn = async (email: string, password: string) => {\n  try {\n    const res = await signInWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    const userData = await getUser(user?.uid)\n    await saveUserToken(user)\n    return userData;\n  } catch (err: any) {\n    console.error(\"Error adding document\", err.code, err.message, err.name);\n    throw Error(getErrorMessage(err.code))\n  }\n};\n\nconst signUp = async (firstName: string, lastName: string, email: string, password: string) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    const usersCollection = collection(db, 'users');\n    const userData = {\n      uid: user.uid,\n      firstName,\n      lastName,\n      email,\n      password\n    }\n    await addDoc(usersCollection, userData);\n    await saveUserToken(user);\n    return userData\n  } catch (err: any) {\n    console.error(\"Error adding document\", err.code, err.message, err.name);\n    throw Error(getErrorMessage(err.code))\n  }\n};\n\nconst getUser = async (userId: string) => {\n  try {\n    const q = query(collection(db, 'users'), where('uid', \"==\", userId), limit(1));\n    const querySnapshot = await getDocs(q);\n    let data: IUser | null = null;\n    querySnapshot.forEach((doc: any) => {\n      data = doc.data();\n    });\n    return data;\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n}\n\nconst signOut = async () => {\n  deleteAuthToken()\n  await auth.signOut();\n};\n\nconst saveUserToken = async (user: User) => {\n  const token = await user.getIdToken()\n  saveAuthToken(token)\n}\n\nexport {\n  auth,\n  db,\n  signIn,\n  signUp,\n  getUser,\n  signOut,\n};","import { actionTypes, IStoreUserDataPayload } from \"./user.actionTypes\"\n\nexport const storeUserData = (payload: IStoreUserDataPayload) => ({\n  type: actionTypes.STORE_USER_DATA,\n  payload,\n})\n\nexport const removeUserData = () => ({\n  type: actionTypes.REMOVE_USER_DATA,\n})"],"sourceRoot":""}
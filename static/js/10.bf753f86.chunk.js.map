{"version":3,"sources":["redux/selectors/auth.selectors.tsx","redux/selectors/user.selectors.tsx","redux/selectors/todos.selectors.tsx","redux/selectors/photos.selectors.tsx","redux/api/auth.api.tsx","redux/api/todos.api.tsx","redux/api/photos.api.tsx","components/Dashboard/Sidebar/index.tsx","components/Dashboard/Content/index.tsx","components/Dashboard/Header/index.tsx","containers/DashboardPage/Dashboard.tsx","containers/DashboardPage/index.tsx","../node_modules/@mui/material/internal/svg-icons/Person.js","../node_modules/@mui/material/Avatar/avatarClasses.js","../node_modules/@mui/material/Avatar/Avatar.js","../node_modules/@mui/material/ListItemAvatar/listItemAvatarClasses.js","../node_modules/@mui/material/ListItemAvatar/ListItemAvatar.js","../node_modules/@mui/icons-material/esm/AssignmentTurnedIn.js","../node_modules/@mui/icons-material/esm/AssignmentLate.js","components/Dashboard/Content/Todos/index.tsx","routes/todos.route.tsx"],"names":["selectSignInStarted","state","auth","signInStarted","selectSignInFailed","signInFailed","selectSignInErrorMessage","signInErrorMessage","selectSignUpStarted","signUpStarted","selectSignUpFailed","signUpFailed","selectSignUpErrorMessage","signUpErrorMessage","selectUser","user","selectTodosList","todos","list","selectTodosFetchStarted","fetchStarted","selectTodosFetchSuccess","fetchSuccess","selectPhotosList","photos","selectPhotosFetchStarted","selectPhotosFetchSuccess","login","email","password","dispatch","a","authActions","signIn","userActions","storeUserData","firstName","lastName","signInSuccess","message","register","signUp","signUpSuccess","logout","signOut","removeUserData","fetchTodos","limit","todosActions","axios","get","res","data","fetchFailed","fetchPhotos","photosActions","Sidebar","section","Drawer","variant","sx","width","flexShrink","boxSizing","Toolbar","Box","overflow","List","ListItem","selected","button","component","Link","to","ListItemIcon","ListItemText","primary","Content","children","flexGrow","p","Dashboard","loading","userData","fnLogout","AppBar","position","zIndex","theme","drawer","display","justifyContent","alignItems","Typography","noWrap","marginRight","Skeleton","height","style","marginBottom","backgroundColor","Stack","spacing","Button","onClick","CssBaseline","Header","DashboardPage","useAuthState","useDispatch","useSelector","memoFetchUserData","useCallback","getUser","uid","console","error","useEffect","history","push","createSvgIcon","_jsx","d","getAvatarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","AvatarRoot","styled","name","overridesResolver","props","styles","ownerState","root","colorDefault","_extends","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","userSelect","shape","color","palette","background","default","mode","grey","AvatarImg","img","textAlign","objectFit","textIndent","AvatarFallback","Person","fallback","Avatar","React","inProps","ref","useThemeProps","alt","childrenProp","className","imgProps","sizes","src","srcSet","other","_objectWithoutPropertiesLoose","loaded","crossOrigin","referrerPolicy","setLoaded","active","image","Image","onload","onerror","srcset","useLoaded","hasImg","hasImgNotFailing","classes","slots","composeClasses","useUtilityClasses","as","clsx","getListItemAvatarUtilityClass","ListItemAvatarRoot","alignItemsFlexStart","minWidth","marginTop","ListItemAvatar","context","ListContext","Todos","todosList","maxWidth","map","todo","completed","green","red","AssignmentTurnedIn","AssignmentLate","title","id","Array","el","index","TodosRoute"],"mappings":"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","file":"static/js/10.bf753f86.chunk.js","sourcesContent":["import { TState } from \"../state\"\n\nexport const selectSignInStarted = (state: TState) => state.auth.signInStarted\nexport const selectSignInSuccess = (state: TState) => state.auth.signInSuccess\nexport const selectSignInFailed = (state: TState) => state.auth.signInFailed\nexport const selectSignInErrorMessage = (state: TState) => state.auth.signInErrorMessage\nexport const selectSignUpStarted = (state: TState) => state.auth.signUpStarted\nexport const selectSignUpSuccess = (state: TState) => state.auth.signUpSuccess\nexport const selectSignUpFailed = (state: TState) => state.auth.signUpFailed\nexport const selectSignUpErrorMessage = (state: TState) => state.auth.signUpErrorMessage","import { TState } from \"../state\"\n\nexport const selectUser = (state: TState) => state.user","import { TState } from \"../state\"\n\nexport const selectTodosList = (state: TState) => state.todos.list\nexport const selectTodosFetchStarted = (state: TState) => state.todos.fetchStarted\nexport const selectTodosFetchSuccess = (state: TState) => state.todos.fetchSuccess\nexport const selectTodosFetchFailed = (state: TState) => state.todos.fetchFailed","import { TState } from \"../state\"\n\nexport const selectPhotosList = (state: TState) => state.photos.list\nexport const selectPhotosFetchStarted = (state: TState) => state.photos.fetchStarted\nexport const selectPhotosFetchSuccess = (state: TState) => state.photos.fetchSuccess\nexport const selectPhotosFetchFailed = (state: TState) => state.photos.fetchFailed","import { Dispatch } from 'react';\nimport { signIn, signUp, signOut } from '../../database'\nimport { ValueOf } from '../../utils/helper/typesGenerics';\nimport { IStoreUserDataPayload, TActionTypes as TUserActionTypes } from '../actions/user.actionTypes';\nimport { TActionTypes as TAuthActionTypes } from '../actions/auth.actionTypes';\nimport { auth as authActions, user as userActions } from '../actions'\n\ntype IDispatchObj = {\n  type: ValueOf<TAuthActionTypes>,\n  payload?: string,\n} | {\n  type: ValueOf<TUserActionTypes>,\n  payload?: IStoreUserDataPayload,  \n}\n\nexport const login = (email: string, password: string) => async (dispatch: Dispatch<IDispatchObj>) => {\n  dispatch(authActions.signInStarted())\n  try {\n    const user: any = await signIn(email, password)\n    if(user) {\n      dispatch(userActions.storeUserData({\n        email,\n        firstName: user.firstName,\n        lastName: user.lastName,\n      }))\n      dispatch(authActions.signInSuccess());\n    }\n  } catch (err: any) {\n    const message = err?.message\n    dispatch(authActions.signInFailed(message));\n  }\n};\n\nexport const register = (firstName: string, lastName: string, email: string, password: string) => async (dispatch: Dispatch<IDispatchObj>) => {\n  dispatch(authActions.signUpStarted())\n  try {\n    const user: any = await signUp(firstName, lastName, email, password)\n    if(user) {\n      dispatch(userActions.storeUserData({\n        email,\n        firstName,\n        lastName,\n      }))\n      dispatch(authActions.signUpSuccess());\n    }\n  } catch (err: any) {\n    const message = err?.message\n    dispatch(authActions.signUpFailed(message));\n  }\n};\n\nexport const logout = () => async (dispatch: Dispatch<IDispatchObj>) => {\n  await signOut()\n  dispatch(userActions.removeUserData())\n  dispatch(authActions.signOut())\n}","import { Dispatch } from 'react';\nimport axios from '../../utils/helper/axios'\nimport { ValueOf } from '../../utils/helper/typesGenerics';\nimport { TTodosList } from '../state'\nimport { TActionTypes } from '../actions/todos.actionTypes'\nimport { todos as todosActions } from '../actions'\n\ntype IDispatchObj = {\n  type: ValueOf<TActionTypes>,\n  payload?: TTodosList,\n}\n\nexport const fetchTodos = (limit: number = 50) => async (dispatch: Dispatch<IDispatchObj>) => {\n  dispatch(todosActions.fetchStarted())\n  try {\n    const res = await axios.get('todos?_limit='+limit)\n    const data = res.data\n    dispatch(todosActions.fetchSuccess(data))\n  } catch(e) {\n    dispatch(todosActions.fetchFailed())\n  }\n}","import { Dispatch } from 'react';\nimport axios from '../../utils/helper/axios'\nimport { ValueOf } from '../../utils/helper/typesGenerics';\nimport { TPhotosList } from '../state'\nimport { TActionTypes } from '../actions/photos.actionTypes'\nimport { photos as photosActions } from '../actions'\n\ntype IDispatchObj = {\n  type: ValueOf<TActionTypes>,\n  payload?: TPhotosList,\n}\n\nexport const fetchPhotos = (limit: number = 50) => async (dispatch: Dispatch<IDispatchObj>) => {\n  dispatch(photosActions.fetchStarted())\n  try {\n    const res = await axios.get('photos?_limit='+limit)\n    const data = res.data\n    dispatch(photosActions.fetchSuccess(data))\n  } catch(e) {\n    dispatch(photosActions.fetchFailed())\n  }\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { \n  Drawer, Box, Toolbar,\n  List, ListItem, ListItemIcon, ListItemText,\n} from '@mui/material';\nimport TaskIcon from '@mui/icons-material/Task';\nimport PhotoLibraryIcon from '@mui/icons-material/PhotoLibrary';\n\nimport { TSection } from '../../../containers/DashboardPage'\n\ninterface IProps {\n  section: TSection\n}\n\nconst drawerWidth = 200;\n\nconst Sidebar = ({ section }: IProps) => {\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      sx={{\n        width: drawerWidth,\n        flexShrink: 0,\n        [`& .MuiDrawer-paper`]: { width: drawerWidth, boxSizing: 'border-box' },\n      }}\n    >\n      <Toolbar />\n      <Box sx={{ overflow: 'auto' }}>\n        <List>\n          <ListItem selected={section === 'todos'} button key='todos' component={Link} to='/'>\n            <ListItemIcon>\n              <TaskIcon />\n            </ListItemIcon>\n            <ListItemText primary='Todos' />\n          </ListItem>\n          <ListItem selected={section === 'photos'} button key='photos' component={Link} to='/photos'>\n            <ListItemIcon>\n              <PhotoLibraryIcon />\n            </ListItemIcon>\n            <ListItemText primary='Album' />\n          </ListItem>\n        </List>\n      </Box>\n    </Drawer>\n  );\n}\n\nexport default Sidebar;","import React, { ReactNode } from \"react\";\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\n\ninterface IProps {\n  children: ReactNode\n}\n\nconst Content = ({ children }: IProps) => {\n\n  return (\n    <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\n      <Toolbar />\n      { children }\n    </Box>\n  );\n}\n\nexport default Content;","import React from \"react\";\nimport { AppBar, Toolbar, Box, Typography, Skeleton, Stack, Button } from \"@mui/material\";\n\nimport { TUserState } from '../../../redux/state/user.state';\n\ninterface IProps {\n  loading: boolean,\n  userData: TUserState,\n  fnLogout: () => void,\n}\n\nconst Dashboard = ({ loading = false, userData = null, fnLogout }: IProps) => {\n\n  return (\n    <AppBar position=\"fixed\" sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}>\n      <Toolbar>\n        <Box display='flex' justifyContent='space-between' alignItems='center' width='100%'>\n          <Typography variant=\"h4\" noWrap component=\"div\">\n            Dashboard\n          </Typography>\n          <Box display='flex'>\n            <Box marginRight='2rem'>\n              {\n                loading || !userData ?\n                (\n                  <>\n                    <Skeleton height={24} width={200} style={{ marginBottom: 6, backgroundColor: 'rgba(255,255,255,.5)' }} />\n                    <Skeleton height={24} width={200} style={{ backgroundColor: 'rgba(255,255,255,.5)' }}/>\n                  </>\n                ) :\n                (\n                  <>\n                    <Typography variant='body1'>{userData?.email}</Typography>\n                    <Typography variant='body1'>{`${userData?.firstName} ${userData?.lastName}`}</Typography>\n                  </>\n                )\n              }\n            </Box>\n            <Stack spacing={2} justifyContent='center'>\n              <Button variant=\"contained\" onClick={fnLogout}>Logout</Button>\n            </Stack>\n          </Box>        \n        </Box>\n      </Toolbar>\n    </AppBar>\n  );\n}\nexport default Dashboard;","import React, { ReactNode } from \"react\";\nimport { CssBaseline, Box } from '@mui/material';\n\nimport { TUserState } from '../../redux/state/user.state';\nimport Sidebar from \"../../components/Dashboard/Sidebar\";\nimport Content from \"../../components/Dashboard/Content\";\nimport Header from \"../../components/Dashboard/Header\";\nimport { TSection } from './index'\n\ninterface IProps {\n  children: ReactNode,\n  section: TSection,\n  loading: boolean,\n  userData: TUserState,\n  fnLogout: () => void,\n}\n\nconst Dashboard = ({ children, section, loading, userData, fnLogout }: IProps) => {\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <CssBaseline />\n      <Header loading={loading} userData={userData} fnLogout={fnLogout} />\n      <Sidebar section={section} />\n      <Content children={children} />\n    </Box>\n  );\n}\n\nexport default Dashboard;","import React, { useEffect, useCallback, ReactNode } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n\nimport { auth, getUser } from \"../../database\";\nimport { logout } from '../../redux/api'\nimport { storeUserData } from \"../../redux/actions/user.actions\";\nimport { selectUser } from \"../../redux/selectors\";\nimport Dashboard from \"./Dashboard\";\nimport { history } from \"../../redux\";\n\nexport type TSection = 'todos' | 'photos'\n\ninterface IProps {\n  children: ReactNode\n  section: TSection\n}\n\nconst DashboardPage = ({ children = null, section = 'todos' }: IProps) => {\n\n  const [user, loading] = useAuthState(auth);\n  const dispatch = useDispatch();\n  const userData = useSelector(selectUser)\n\n  const memoFetchUserData = useCallback(async () => {\n    try {\n      if(!user) return\n      const userData = await getUser(user.uid)\n      if(!userData) return;\n      const { email, firstName, lastName } = userData\n      dispatch(storeUserData({ email, firstName, lastName }))\n    } catch (err) {\n      console.error(err);\n    }\n  }, [dispatch, user]);\n\n  useEffect(() => {\n    if (loading) return;\n    if (!user) return history.push('/login')\n    memoFetchUserData();\n  }, [user, loading, memoFetchUserData]);\n\n  const handleLogout = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <Dashboard\n      children={children}\n      section={section}\n      loading={loading}\n      userData={userData}\n      fnLogout={handleLogout}\n    />\n  );\n}\n\nexport default DashboardPage;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatar', slot);\n}\nconst avatarClasses = generateUtilityClasses('MuiAvatar', ['root', 'colorDefault', 'circular', 'rounded', 'square', 'img', 'fallback']);\nexport default avatarClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"alt\", \"children\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Person from '../internal/svg-icons/Person';\nimport { getAvatarUtilityClass } from './avatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\n\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none'\n}, ownerState.variant === 'rounded' && {\n  borderRadius: theme.shape.borderRadius\n}, ownerState.variant === 'square' && {\n  borderRadius: 0\n}, ownerState.colorDefault && {\n  color: theme.palette.background.default,\n  backgroundColor: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n}));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image. The property isn't supported by IE11.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\n\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\n\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n\n  const {\n    alt,\n    children: childrenProp,\n    className,\n    component = 'div',\n    imgProps,\n    sizes,\n    src,\n    srcSet,\n    variant = 'circular'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  let children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  const loaded = useLoaded(_extends({}, imgProps, {\n    src,\n    srcSet\n  }));\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n\n  const ownerState = _extends({}, props, {\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(AvatarImg, _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      ownerState: ownerState,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/_jsx(AvatarRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getListItemAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemAvatar', slot);\n}\nconst listItemAvatarClasses = generateUtilityClasses('MuiListItemAvatar', ['root', 'alignItemsFlexStart']);\nexport default listItemAvatarClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport ListContext from '../List/ListContext';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemAvatarUtilityClass } from './listItemAvatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemAvatarUtilityClass, classes);\n};\n\nconst ListItemAvatarRoot = styled('div', {\n  name: 'MuiListItemAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  flexShrink: 0\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nconst ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemAvatar'\n  });\n\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = React.useContext(ListContext);\n\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemAvatarRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `Avatar`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemAvatar;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm-2 14-4-4 1.41-1.41L10 14.17l6.59-6.59L18 9l-8 8z\"\n}), 'AssignmentTurnedIn');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-6 15h-2v-2h2v2zm0-4h-2V8h2v6zm-1-9c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z\"\n}), 'AssignmentLate');","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  List, ListItem, ListItemText, ListItemAvatar, Avatar, Skeleton,\n} from '@mui/material';\nimport { \n  AssignmentLate as AssignmentLateIcon, \n  AssignmentTurnedIn as AssignmentTurnedInIcon\n} from '@mui/icons-material';\nimport { green, red } from '@mui/material/colors';\n\nimport { fetchTodos } from '../../../../redux/api';\nimport { selectTodosFetchStarted, selectTodosFetchSuccess, selectTodosList } from '../../../../redux/selectors';\nimport DashboardPage from '../../../../containers/DashboardPage';\n\nconst limit = 20\n\nconst Todos = () => {\n\n  const dispatch = useDispatch();\n  const fetchSuccess = useSelector(selectTodosFetchSuccess)\n  const fetchStarted = useSelector(selectTodosFetchStarted)\n  const todosList = useSelector(selectTodosList)\n\n  useEffect(() => {\n    if(!fetchSuccess) {\n      dispatch(fetchTodos(limit))\n    }\n  }, [dispatch, fetchSuccess])\n  \n  return (\n    <DashboardPage section='todos'>\n      <List sx={{ width: '100%', maxWidth: 600 }}>\n        {\n          fetchSuccess && todosList.map(todo => (\n            <ListItem key={todo.id}>\n              <ListItemAvatar>\n                <Avatar sx={{ backgroundColor: todo.completed ? green[500] : red[500] }}>\n                  { todo.completed ? <AssignmentTurnedInIcon /> : <AssignmentLateIcon /> }\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={todo.title} />\n            </ListItem>\n          ))\n        }\n        {\n          fetchStarted && [...new Array(limit)].map((el, index) => (\n            <ListItem key={index}>\n              <ListItemAvatar>\n                <Skeleton variant=\"circular\" width={40} height={40} />\n              </ListItemAvatar>\n              <Skeleton variant=\"rectangular\" width={500} height={30} />\n            </ListItem>\n          ))\n        }\n      </List>\n    </DashboardPage>\n  )\n}\n\nexport default Todos","import React from 'react'\nimport TodosSection from '../components/Dashboard/Content/Todos'\n\nconst TodosRoute = () => {\n  return <TodosSection />\n}\n\nexport default TodosRoute"],"sourceRoot":""}
{"version":3,"sources":["redux/selectors/auth.selectors.tsx","redux/selectors/user.selectors.tsx","redux/selectors/todos.selectors.tsx","redux/selectors/photos.selectors.tsx","redux/api/auth.api.tsx","redux/api/todos.api.tsx","redux/api/photos.api.tsx","components/Dashboard/Sidebar/index.tsx","components/Dashboard/Content/index.tsx","components/Dashboard/Header/index.tsx","containers/DashboardPage/Dashboard.tsx","containers/DashboardPage/index.tsx","../node_modules/@mui/material/Grid/GridContext.js","../node_modules/@mui/material/Grid/gridClasses.js","../node_modules/@mui/material/Grid/Grid.js","components/Dashboard/Content/Photos/index.tsx","routes/photos.route.tsx"],"names":["selectSignInStarted","state","auth","signInStarted","selectSignInFailed","signInFailed","selectSignInErrorMessage","signInErrorMessage","selectSignUpStarted","signUpStarted","selectSignUpFailed","signUpFailed","selectSignUpErrorMessage","signUpErrorMessage","selectUser","user","selectTodosList","todos","list","selectTodosFetchStarted","fetchStarted","selectTodosFetchSuccess","fetchSuccess","selectPhotosList","photos","selectPhotosFetchStarted","selectPhotosFetchSuccess","login","email","password","dispatch","a","authActions","signIn","userActions","storeUserData","firstName","lastName","signInSuccess","message","register","signUp","signUpSuccess","logout","signOut","removeUserData","fetchTodos","limit","todosActions","axios","get","res","data","fetchFailed","fetchPhotos","photosActions","Sidebar","section","Drawer","variant","sx","width","flexShrink","boxSizing","Toolbar","Box","overflow","List","ListItem","selected","button","component","Link","to","ListItemIcon","ListItemText","primary","Content","children","flexGrow","p","Dashboard","loading","userData","fnLogout","AppBar","position","zIndex","theme","drawer","display","justifyContent","alignItems","Typography","noWrap","marginRight","Skeleton","height","style","marginBottom","backgroundColor","Stack","spacing","Button","onClick","CssBaseline","Header","DashboardPage","useAuthState","useDispatch","useSelector","memoFetchUserData","useCallback","getUser","uid","console","error","useEffect","history","push","GridContext","React","getGridUtilityClass","slot","generateUtilityClass","GRID_SIZES","gridClasses","generateUtilityClasses","map","direction","wrap","size","_excluded","getOffset","val","parse","parseFloat","String","replace","GridRoot","styled","name","overridesResolver","props","styles","ownerState","container","item","lg","md","sm","xl","xs","zeroMinWidth","root","_extends","flexWrap","margin","minWidth","directionValues","resolveBreakpointValues","values","breakpoints","handleBreakpoints","propValue","output","flexDirection","indexOf","maxWidth","rowSpacing","rowSpacingValues","themeSpacing","marginTop","paddingTop","columnSpacing","columnSpacingValues","marginLeft","paddingLeft","keys","reduce","globalStyles","breakpoint","flexBasis","columnsBreakpointValues","columns","columnValue","Math","round","more","fullWidth","Object","assign","up","generateGrid","Grid","inProps","ref","element","themeProps","useThemeProps","extendSxProp","className","columnsProp","columnSpacingProp","rowSpacingProp","other","_objectWithoutPropertiesLoose","columnsContext","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","as","Provider","value","Posts","photosList","photo","src","thumbnailUrl","alt","title","id","Array","el","index","PhotosRoute","Photos"],"mappings":"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","file":"static/js/9.b610b4ff.chunk.js","sourcesContent":["import { TState } from \"../state\"\n\nexport const selectSignInStarted = (state: TState) => state.auth.signInStarted\nexport const selectSignInSuccess = (state: TState) => state.auth.signInSuccess\nexport const selectSignInFailed = (state: TState) => state.auth.signInFailed\nexport const selectSignInErrorMessage = (state: TState) => state.auth.signInErrorMessage\nexport const selectSignUpStarted = (state: TState) => state.auth.signUpStarted\nexport const selectSignUpSuccess = (state: TState) => state.auth.signUpSuccess\nexport const selectSignUpFailed = (state: TState) => state.auth.signUpFailed\nexport const selectSignUpErrorMessage = (state: TState) => state.auth.signUpErrorMessage","import { TState } from \"../state\"\n\nexport const selectUser = (state: TState) => state.user","import { TState } from \"../state\"\n\nexport const selectTodosList = (state: TState) => state.todos.list\nexport const selectTodosFetchStarted = (state: TState) => state.todos.fetchStarted\nexport const selectTodosFetchSuccess = (state: TState) => state.todos.fetchSuccess\nexport const selectTodosFetchFailed = (state: TState) => state.todos.fetchFailed","import { TState } from \"../state\"\n\nexport const selectPhotosList = (state: TState) => state.photos.list\nexport const selectPhotosFetchStarted = (state: TState) => state.photos.fetchStarted\nexport const selectPhotosFetchSuccess = (state: TState) => state.photos.fetchSuccess\nexport const selectPhotosFetchFailed = (state: TState) => state.photos.fetchFailed","import { Dispatch } from 'react';\nimport { signIn, signUp, signOut } from '../../database'\nimport { ValueOf } from '../../utils/helper/typesGenerics';\nimport { IStoreUserDataPayload, TActionTypes as TUserActionTypes } from '../actions/user.actionTypes';\nimport { TActionTypes as TAuthActionTypes } from '../actions/auth.actionTypes';\nimport { auth as authActions, user as userActions } from '../actions'\n\ntype IDispatchObj = {\n  type: ValueOf<TAuthActionTypes>,\n  payload?: string,\n} | {\n  type: ValueOf<TUserActionTypes>,\n  payload?: IStoreUserDataPayload,  \n}\n\nexport const login = (email: string, password: string) => async (dispatch: Dispatch<IDispatchObj>) => {\n  dispatch(authActions.signInStarted())\n  try {\n    const user: any = await signIn(email, password)\n    if(user) {\n      dispatch(userActions.storeUserData({\n        email,\n        firstName: user.firstName,\n        lastName: user.lastName,\n      }))\n      dispatch(authActions.signInSuccess());\n    }\n  } catch (err: any) {\n    const message = err?.message\n    dispatch(authActions.signInFailed(message));\n  }\n};\n\nexport const register = (firstName: string, lastName: string, email: string, password: string) => async (dispatch: Dispatch<IDispatchObj>) => {\n  dispatch(authActions.signUpStarted())\n  try {\n    const user: any = await signUp(firstName, lastName, email, password)\n    if(user) {\n      dispatch(userActions.storeUserData({\n        email,\n        firstName,\n        lastName,\n      }))\n      dispatch(authActions.signUpSuccess());\n    }\n  } catch (err: any) {\n    const message = err?.message\n    dispatch(authActions.signUpFailed(message));\n  }\n};\n\nexport const logout = () => async (dispatch: Dispatch<IDispatchObj>) => {\n  await signOut()\n  dispatch(userActions.removeUserData())\n  dispatch(authActions.signOut())\n}","import { Dispatch } from 'react';\nimport axios from '../../utils/helper/axios'\nimport { ValueOf } from '../../utils/helper/typesGenerics';\nimport { TTodosList } from '../state'\nimport { TActionTypes } from '../actions/todos.actionTypes'\nimport { todos as todosActions } from '../actions'\n\ntype IDispatchObj = {\n  type: ValueOf<TActionTypes>,\n  payload?: TTodosList,\n}\n\nexport const fetchTodos = (limit: number = 50) => async (dispatch: Dispatch<IDispatchObj>) => {\n  dispatch(todosActions.fetchStarted())\n  try {\n    const res = await axios.get('todos?_limit='+limit)\n    const data = res.data\n    dispatch(todosActions.fetchSuccess(data))\n  } catch(e) {\n    dispatch(todosActions.fetchFailed())\n  }\n}","import { Dispatch } from 'react';\nimport axios from '../../utils/helper/axios'\nimport { ValueOf } from '../../utils/helper/typesGenerics';\nimport { TPhotosList } from '../state'\nimport { TActionTypes } from '../actions/photos.actionTypes'\nimport { photos as photosActions } from '../actions'\n\ntype IDispatchObj = {\n  type: ValueOf<TActionTypes>,\n  payload?: TPhotosList,\n}\n\nexport const fetchPhotos = (limit: number = 50) => async (dispatch: Dispatch<IDispatchObj>) => {\n  dispatch(photosActions.fetchStarted())\n  try {\n    const res = await axios.get('photos?_limit='+limit)\n    const data = res.data\n    dispatch(photosActions.fetchSuccess(data))\n  } catch(e) {\n    dispatch(photosActions.fetchFailed())\n  }\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { \n  Drawer, Box, Toolbar,\n  List, ListItem, ListItemIcon, ListItemText,\n} from '@mui/material';\nimport TaskIcon from '@mui/icons-material/Task';\nimport PhotoLibraryIcon from '@mui/icons-material/PhotoLibrary';\n\nimport { TSection } from '../../../containers/DashboardPage'\n\ninterface IProps {\n  section: TSection\n}\n\nconst drawerWidth = 200;\n\nconst Sidebar = ({ section }: IProps) => {\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      sx={{\n        width: drawerWidth,\n        flexShrink: 0,\n        [`& .MuiDrawer-paper`]: { width: drawerWidth, boxSizing: 'border-box' },\n      }}\n    >\n      <Toolbar />\n      <Box sx={{ overflow: 'auto' }}>\n        <List>\n          <ListItem selected={section === 'todos'} button key='todos' component={Link} to='/'>\n            <ListItemIcon>\n              <TaskIcon />\n            </ListItemIcon>\n            <ListItemText primary='Todos' />\n          </ListItem>\n          <ListItem selected={section === 'photos'} button key='photos' component={Link} to='/photos'>\n            <ListItemIcon>\n              <PhotoLibraryIcon />\n            </ListItemIcon>\n            <ListItemText primary='Album' />\n          </ListItem>\n        </List>\n      </Box>\n    </Drawer>\n  );\n}\n\nexport default Sidebar;","import React, { ReactNode } from \"react\";\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\n\ninterface IProps {\n  children: ReactNode\n}\n\nconst Content = ({ children }: IProps) => {\n\n  return (\n    <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\n      <Toolbar />\n      { children }\n    </Box>\n  );\n}\n\nexport default Content;","import React from \"react\";\nimport { AppBar, Toolbar, Box, Typography, Skeleton, Stack, Button } from \"@mui/material\";\n\nimport { TUserState } from '../../../redux/state/user.state';\n\ninterface IProps {\n  loading: boolean,\n  userData: TUserState,\n  fnLogout: () => void,\n}\n\nconst Dashboard = ({ loading = false, userData = null, fnLogout }: IProps) => {\n\n  return (\n    <AppBar position=\"fixed\" sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}>\n      <Toolbar>\n        <Box display='flex' justifyContent='space-between' alignItems='center' width='100%'>\n          <Typography variant=\"h4\" noWrap component=\"div\">\n            Dashboard\n          </Typography>\n          <Box display='flex'>\n            <Box marginRight='2rem'>\n              {\n                loading || !userData ?\n                (\n                  <>\n                    <Skeleton height={24} width={200} style={{ marginBottom: 6, backgroundColor: 'rgba(255,255,255,.5)' }} />\n                    <Skeleton height={24} width={200} style={{ backgroundColor: 'rgba(255,255,255,.5)' }}/>\n                  </>\n                ) :\n                (\n                  <>\n                    <Typography variant='body1'>{userData?.email}</Typography>\n                    <Typography variant='body1'>{`${userData?.firstName} ${userData?.lastName}`}</Typography>\n                  </>\n                )\n              }\n            </Box>\n            <Stack spacing={2} justifyContent='center'>\n              <Button variant=\"contained\" onClick={fnLogout}>Logout</Button>\n            </Stack>\n          </Box>        \n        </Box>\n      </Toolbar>\n    </AppBar>\n  );\n}\nexport default Dashboard;","import React, { ReactNode } from \"react\";\nimport { CssBaseline, Box } from '@mui/material';\n\nimport { TUserState } from '../../redux/state/user.state';\nimport Sidebar from \"../../components/Dashboard/Sidebar\";\nimport Content from \"../../components/Dashboard/Content\";\nimport Header from \"../../components/Dashboard/Header\";\nimport { TSection } from './index'\n\ninterface IProps {\n  children: ReactNode,\n  section: TSection,\n  loading: boolean,\n  userData: TUserState,\n  fnLogout: () => void,\n}\n\nconst Dashboard = ({ children, section, loading, userData, fnLogout }: IProps) => {\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <CssBaseline />\n      <Header loading={loading} userData={userData} fnLogout={fnLogout} />\n      <Sidebar section={section} />\n      <Content children={children} />\n    </Box>\n  );\n}\n\nexport default Dashboard;","import React, { useEffect, useCallback, ReactNode } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n\nimport { auth, getUser } from \"../../database\";\nimport { logout } from '../../redux/api'\nimport { storeUserData } from \"../../redux/actions/user.actions\";\nimport { selectUser } from \"../../redux/selectors\";\nimport Dashboard from \"./Dashboard\";\nimport { history } from \"../../redux\";\n\nexport type TSection = 'todos' | 'photos'\n\ninterface IProps {\n  children: ReactNode\n  section: TSection\n}\n\nconst DashboardPage = ({ children = null, section = 'todos' }: IProps) => {\n\n  const [user, loading] = useAuthState(auth);\n  const dispatch = useDispatch();\n  const userData = useSelector(selectUser)\n\n  const memoFetchUserData = useCallback(async () => {\n    try {\n      if(!user) return\n      const userData = await getUser(user.uid)\n      if(!userData) return;\n      const { email, firstName, lastName } = userData\n      dispatch(storeUserData({ email, firstName, lastName }))\n    } catch (err) {\n      console.error(err);\n    }\n  }, [dispatch, user]);\n\n  useEffect(() => {\n    if (loading) return;\n    if (!user) return history.push('/login')\n    memoFetchUserData();\n  }, [user, loading, memoFetchUserData]);\n\n  const handleLogout = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <Dashboard\n      children={children}\n      section={section}\n      loading={loading}\n      userData={userData}\n      fnLogout={handleLogout}\n    />\n  );\n}\n\nexport default DashboardPage;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst GridContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\n\nexport default GridContext;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nconst WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth', // spacings\n...SPACINGS.map(spacing => `spacing-xs-${spacing}`), // direction values\n...DIRECTIONS.map(direction => `direction-xs-${direction}`), // wrap values\n...WRAPS.map(wrap => `wrap-xs-${wrap}`), // grid sizes for all breakpoints\n...GRID_SIZES.map(size => `grid-xs-${size}`), ...GRID_SIZES.map(size => `grid-sm-${size}`), ...GRID_SIZES.map(size => `grid-md-${size}`), ...GRID_SIZES.map(size => `grid-lg-${size}`), ...GRID_SIZES.map(size => `grid-xl-${size}`)]);\nexport default gridClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"lg\", \"md\", \"rowSpacing\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"];\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\n\nfunction generateGrid(globalStyles, theme, breakpoint, ownerState) {\n  const size = ownerState[breakpoint];\n\n  if (!size) {\n    return;\n  }\n\n  let styles = {};\n\n  if (size === true) {\n    // For the auto layouting\n    styles = {\n      flexBasis: 0,\n      flexGrow: 1,\n      maxWidth: '100%'\n    };\n  } else if (size === 'auto') {\n    styles = {\n      flexBasis: 'auto',\n      flexGrow: 0,\n      flexShrink: 0,\n      maxWidth: 'none',\n      width: 'auto'\n    };\n  } else {\n    const columnsBreakpointValues = resolveBreakpointValues({\n      values: ownerState.columns,\n      breakpoints: theme.breakpoints.values\n    });\n    const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues; // Keep 7 significant numbers.\n\n    const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n    let more = {};\n\n    if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n      const themeSpacing = theme.spacing(ownerState.columnSpacing);\n\n      if (themeSpacing !== '0px') {\n        const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n        more = {\n          flexBasis: fullWidth,\n          maxWidth: fullWidth\n        };\n      }\n    } // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n\n    styles = _extends({\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    }, more);\n  } // No need for a media query for the first size.\n\n\n  if (theme.breakpoints.values[breakpoint] === 0) {\n    Object.assign(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nexport function generateDirection({\n  theme,\n  ownerState\n}) {\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n\n    if (propValue.indexOf('column') === 0) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n\n    return output;\n  });\n}\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, propValue => {\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: getOffset(themeSpacing)\n          }\n        };\n      }\n\n      return {};\n    });\n  }\n\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, propValue => {\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          width: `calc(100% + ${getOffset(themeSpacing)})`,\n          marginLeft: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: getOffset(themeSpacing)\n          }\n        };\n      }\n\n      return {};\n    });\n  }\n\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      container,\n      direction,\n      item,\n      lg,\n      md,\n      sm,\n      spacing,\n      wrap,\n      xl,\n      xs,\n      zeroMinWidth\n    } = props.ownerState;\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, container && spacing !== 0 && styles[`spacing-xs-${String(spacing)}`], direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], xs !== false && styles[`grid-xs-${String(xs)}`], sm !== false && styles[`grid-sm-${String(sm)}`], md !== false && styles[`grid-md-${String(md)}`], lg !== false && styles[`grid-lg-${String(lg)}`], xl !== false && styles[`grid-xl-${String(xl)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box'\n}, ownerState.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, ownerState.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n\n}, ownerState.zeroMinWidth && {\n  minWidth: 0\n}, ownerState.wrap === 'nowrap' && {\n  flexWrap: 'nowrap'\n}, ownerState.wrap === 'reverse' && {\n  flexWrap: 'wrap-reverse'\n}), generateDirection, generateRowGap, generateColumnGap, ({\n  theme,\n  ownerState\n}) => theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n  // Use side effect over immutability for better performance.\n  generateGrid(globalStyles, theme, breakpoint, ownerState);\n  return globalStyles;\n}, {}));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    spacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', container && spacing !== 0 && `spacing-xs-${String(spacing)}`, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, xs !== false && `grid-xs-${String(xs)}`, sm !== false && `grid-sm-${String(sm)}`, md !== false && `grid-md-${String(md)}`, lg !== false && `grid-lg-${String(lg)}`, xl !== false && `grid-xl-${String(xl)}`]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    className,\n    columns: columnsProp,\n    columnSpacing: columnSpacingProp,\n    component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    lg = false,\n    md = false,\n    rowSpacing: rowSpacingProp,\n    sm = false,\n    spacing = 0,\n    wrap = 'wrap',\n    xl = false,\n    xs = false,\n    zeroMinWidth = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridContext); // setting prop before context to accomodate nesting\n  // colums set with default breakpoint unit of 12\n\n  const columns = columnsProp || columnsContext || 12;\n\n  const ownerState = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const wrapChild = element => columns !== 12 ? /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: element\n  }) : element;\n\n  return wrapChild( /*#__PURE__*/_jsx(GridRoot, _extends({\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid); // eslint-disable-next-line no-useless-concat\n\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default Grid;","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Grid, Skeleton } from '@mui/material';\n\nimport { fetchPhotos } from '../../../../redux/api';\nimport { selectPhotosFetchStarted, selectPhotosFetchSuccess, selectPhotosList } from '../../../../redux/selectors';\nimport DashboardPage from '../../../../containers/DashboardPage';\n\nconst limit = 24\n\nconst Posts = () => {\n\n  const dispatch = useDispatch();\n  const fetchSuccess = useSelector(selectPhotosFetchSuccess)\n  const fetchStarted = useSelector(selectPhotosFetchStarted)\n  const photosList = useSelector(selectPhotosList)\n\n  useEffect(() => {\n    if(!fetchSuccess) {\n      dispatch(fetchPhotos(limit))\n    }\n  }, [dispatch, fetchSuccess])\n  \n  return (\n    <DashboardPage section='photos'>\n      <Grid container spacing={2}>\n        {\n          fetchSuccess && photosList.map(photo => (\n            <Grid key={photo.id} item xs={12} sm={6} md={4} lg={3} display=\"flex\" justifyContent=\"center\">\n              <img src={photo.thumbnailUrl} alt={photo.title} />\n            </Grid>\n          ))\n        }\n        {\n          fetchStarted && [...new Array(limit)].map((el, index) => (\n            <Grid key={index} item xs={12} sm={6} md={4} lg={3} display=\"flex\" justifyContent=\"center\">\n              <Skeleton variant=\"rectangular\" width={150} height={150} />\n            </Grid>\n          ))\n        }\n      </Grid>\n    </DashboardPage>\n  )\n}\n\nexport default Posts","import React from 'react'\nimport PhotosSection from '../components/Dashboard/Content/Photos'\n\nconst PhotosRoute = () => {\n  return <PhotosSection />\n}\n\nexport default PhotosRoute"],"sourceRoot":""}
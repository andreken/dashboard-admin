{"version":3,"sources":["redux/selectors/auth.selectors.tsx","redux/selectors/user.selectors.tsx","redux/selectors/todos.selectors.tsx","redux/selectors/photos.selectors.tsx","redux/api/auth.api.tsx","redux/api/todos.api.tsx","redux/api/photos.api.tsx","redux/selectors/router.selectors.tsx","components/Dashboard/Sidebar/index.tsx","components/Dashboard/Content/index.tsx","components/Dashboard/Header/index.tsx","containers/DashboardPage/Dashboard.tsx","containers/DashboardPage/index.tsx","routes/dashboard.route.tsx"],"names":["selectSignInStarted","state","auth","signInStarted","selectSignInFailed","signInFailed","selectSignInErrorMessage","signInErrorMessage","selectSignUpStarted","signUpStarted","selectSignUpFailed","signUpFailed","selectSignUpErrorMessage","signUpErrorMessage","selectUser","user","selectTodosList","todos","list","selectTodosFetchStarted","fetchStarted","selectTodosFetchSuccess","fetchSuccess","selectPhotosList","photos","selectPhotosFetchStarted","selectPhotosFetchSuccess","login","email","password","dispatch","a","authActions","signIn","userActions","storeUserData","firstName","lastName","signInSuccess","message","register","signUp","signUpSuccess","logout","signOut","removeUserData","fetchTodos","limit","todosActions","axios","get","res","data","fetchFailed","fetchPhotos","photosActions","selectPathname","router","location","pathname","Sidebar","useSelector","Drawer","variant","sx","width","flexShrink","boxSizing","Toolbar","Box","overflow","List","ListItem","selected","TODOS_PATH","button","component","Link","to","ListItemIcon","Task","ListItemText","primary","PHOTOS_PATH","PhotoLibrary","Todos","React","lazy","Photos","Content","flexGrow","p","exact","path","Dashboard","loading","userData","fnLogout","AppBar","position","zIndex","theme","drawer","display","justifyContent","alignItems","Typography","noWrap","marginRight","Skeleton","height","style","marginBottom","backgroundColor","Stack","spacing","Button","onClick","CssBaseline","Header","DashboardPage","useAuthState","useDispatch","memoFetchUserData","useCallback","getUser","uid","console","error","useEffect","history","push","LOGIN_PATH","DashboardRoute"],"mappings":"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","file":"static/js/9.23965100.chunk.js","sourcesContent":["import { TState } from \"../state\"\n\nexport const selectSignInStarted = (state: TState) => state.auth.signInStarted\nexport const selectSignInSuccess = (state: TState) => state.auth.signInSuccess\nexport const selectSignInFailed = (state: TState) => state.auth.signInFailed\nexport const selectSignInErrorMessage = (state: TState) => state.auth.signInErrorMessage\nexport const selectSignUpStarted = (state: TState) => state.auth.signUpStarted\nexport const selectSignUpSuccess = (state: TState) => state.auth.signUpSuccess\nexport const selectSignUpFailed = (state: TState) => state.auth.signUpFailed\nexport const selectSignUpErrorMessage = (state: TState) => state.auth.signUpErrorMessage","import { TState } from \"../state\"\n\nexport const selectUser = (state: TState) => state.user","import { TState } from \"../state\"\n\nexport const selectTodosList = (state: TState) => state.todos.list\nexport const selectTodosFetchStarted = (state: TState) => state.todos.fetchStarted\nexport const selectTodosFetchSuccess = (state: TState) => state.todos.fetchSuccess\nexport const selectTodosFetchFailed = (state: TState) => state.todos.fetchFailed","import { TState } from \"../state\"\n\nexport const selectPhotosList = (state: TState) => state.photos.list\nexport const selectPhotosFetchStarted = (state: TState) => state.photos.fetchStarted\nexport const selectPhotosFetchSuccess = (state: TState) => state.photos.fetchSuccess\nexport const selectPhotosFetchFailed = (state: TState) => state.photos.fetchFailed","import { Dispatch } from 'react';\nimport { signIn, signUp, signOut } from '../../database'\nimport { ValueOf } from '../../utils/helper/typesGenerics';\nimport { IStoreUserDataPayload, TActionTypes as TUserActionTypes } from '../actions/user.actionTypes';\nimport { TActionTypes as TAuthActionTypes } from '../actions/auth.actionTypes';\nimport { auth as authActions, user as userActions } from '../actions'\n\ntype IDispatchObj = {\n  type: ValueOf<TAuthActionTypes>,\n  payload?: string,\n} | {\n  type: ValueOf<TUserActionTypes>,\n  payload?: IStoreUserDataPayload,  \n}\n\nexport const login = (email: string, password: string) => async (dispatch: Dispatch<IDispatchObj>) => {\n  dispatch(authActions.signInStarted())\n  try {\n    const user: any = await signIn(email, password)\n    if(user) {\n      dispatch(userActions.storeUserData({\n        email,\n        firstName: user.firstName,\n        lastName: user.lastName,\n      }))\n      dispatch(authActions.signInSuccess());\n    }\n  } catch (err: any) {\n    const message = err?.message\n    dispatch(authActions.signInFailed(message));\n  }\n};\n\nexport const register = (firstName: string, lastName: string, email: string, password: string) => async (dispatch: Dispatch<IDispatchObj>) => {\n  dispatch(authActions.signUpStarted())\n  try {\n    const user: any = await signUp(firstName, lastName, email, password)\n    if(user) {\n      dispatch(userActions.storeUserData({\n        email,\n        firstName,\n        lastName,\n      }))\n      dispatch(authActions.signUpSuccess());\n    }\n  } catch (err: any) {\n    const message = err?.message\n    dispatch(authActions.signUpFailed(message));\n  }\n};\n\nexport const logout = () => async (dispatch: Dispatch<IDispatchObj>) => {\n  await signOut()\n  dispatch(userActions.removeUserData())\n  dispatch(authActions.signOut())\n}","import { Dispatch } from 'react';\nimport axios from '../../utils/helper/axios'\nimport { ValueOf } from '../../utils/helper/typesGenerics';\nimport { TTodosList } from '../state'\nimport { TActionTypes } from '../actions/todos.actionTypes'\nimport { todos as todosActions } from '../actions'\n\ntype IDispatchObj = {\n  type: ValueOf<TActionTypes>,\n  payload?: TTodosList,\n}\n\nexport const fetchTodos = (limit: number = 50) => async (dispatch: Dispatch<IDispatchObj>) => {\n  dispatch(todosActions.fetchStarted())\n  try {\n    const res = await axios.get('todos?_limit='+limit)\n    const data = res.data\n    dispatch(todosActions.fetchSuccess(data))\n  } catch(e) {\n    dispatch(todosActions.fetchFailed())\n  }\n}","import { Dispatch } from 'react';\nimport axios from '../../utils/helper/axios'\nimport { ValueOf } from '../../utils/helper/typesGenerics';\nimport { TPhotosList } from '../state'\nimport { TActionTypes } from '../actions/photos.actionTypes'\nimport { photos as photosActions } from '../actions'\n\ntype IDispatchObj = {\n  type: ValueOf<TActionTypes>,\n  payload?: TPhotosList,\n}\n\nexport const fetchPhotos = (limit: number = 50) => async (dispatch: Dispatch<IDispatchObj>) => {\n  dispatch(photosActions.fetchStarted())\n  try {\n    const res = await axios.get('photos?_limit='+limit)\n    const data = res.data\n    dispatch(photosActions.fetchSuccess(data))\n  } catch(e) {\n    dispatch(photosActions.fetchFailed())\n  }\n}","import { TState } from \"../state\"\n\nexport const selectPathname = (state: TState) => state.router.location.pathname || '/'","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport {\n  Drawer, Box, Toolbar,\n  List, ListItem, ListItemIcon, ListItemText,\n} from '@mui/material';\nimport {\n  Task as TaskIcon,\n  PhotoLibrary as PhotoLibraryIcon,\n} from '@mui/icons-material';\n\nimport { selectPathname } from \"../../../redux/selectors/router.selectors\";\nimport { PHOTOS_PATH, TODOS_PATH } from \"../../../utils/const\";\n\nconst drawerWidth = 200;\n\nconst Sidebar = () => {\n\n  const pathname = useSelector(selectPathname)\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      sx={{\n        width: drawerWidth,\n        flexShrink: 0,\n        [`& .MuiDrawer-paper`]: { width: drawerWidth, boxSizing: 'border-box' },\n      }}\n    >\n      <Toolbar />\n      <Box sx={{ overflow: 'auto' }}>\n        <List>\n          <ListItem selected={pathname === TODOS_PATH} button key={TODOS_PATH} component={Link} to={TODOS_PATH}>\n            <ListItemIcon>\n              <TaskIcon />\n            </ListItemIcon>\n            <ListItemText primary='Todos' />\n          </ListItem>\n          <ListItem selected={pathname === PHOTOS_PATH} button key={PHOTOS_PATH} component={Link} to={PHOTOS_PATH}>\n            <ListItemIcon>\n              <PhotoLibraryIcon />\n            </ListItemIcon>\n            <ListItemText primary='Album' />\n          </ListItem>\n        </List>\n      </Box>\n    </Drawer>\n  );\n}\n\nexport default Sidebar;","import React from \"react\";\nimport { Switch, Route } from 'react-router-dom'\nimport { Box, Toolbar } from '@mui/material';\n\nimport { PHOTOS_PATH, TODOS_PATH } from \"../../../utils/const\";\n\nconst Todos = React.lazy(() => import('../Content/Todos'))\nconst Photos = React.lazy(() => import('../Content/Photos'))\n\nconst Content = () => {\n\n  return (\n    <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\n      <Toolbar />\n      <Switch>\n        <Route exact path={TODOS_PATH} component={Todos} />\n        <Route exact path={PHOTOS_PATH} component={Photos} />\n      </Switch>\n    </Box>\n  );\n}\n\nexport default Content;","import React from \"react\";\nimport { AppBar, Toolbar, Box, Typography, Skeleton, Stack, Button } from \"@mui/material\";\n\nimport { TUserState } from '../../../redux/state/user.state';\n\ninterface IProps {\n  loading: boolean,\n  userData: TUserState,\n  fnLogout: () => void,\n}\n\nconst Dashboard = ({ loading = false, userData = null, fnLogout }: IProps) => {\n\n  return (\n    <AppBar position=\"fixed\" sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}>\n      <Toolbar>\n        <Box display='flex' justifyContent='space-between' alignItems='center' width='100%'>\n          <Typography variant=\"h4\" noWrap component=\"div\">\n            Dashboard\n          </Typography>\n          <Box display='flex'>\n            <Box marginRight='2rem'>\n              {\n                loading || !userData ?\n                (\n                  <>\n                    <Skeleton height={24} width={200} style={{ marginBottom: 6, backgroundColor: 'rgba(255,255,255,.5)' }} />\n                    <Skeleton height={24} width={200} style={{ backgroundColor: 'rgba(255,255,255,.5)' }}/>\n                  </>\n                ) :\n                (\n                  <>\n                    <Typography variant='body1'>{userData?.email}</Typography>\n                    <Typography variant='body1'>{`${userData?.firstName} ${userData?.lastName}`}</Typography>\n                  </>\n                )\n              }\n            </Box>\n            <Stack spacing={2} justifyContent='center'>\n              <Button variant=\"contained\" onClick={fnLogout}>Logout</Button>\n            </Stack>\n          </Box>        \n        </Box>\n      </Toolbar>\n    </AppBar>\n  );\n}\nexport default Dashboard;","import React from \"react\";\nimport { CssBaseline, Box } from '@mui/material';\n\nimport { TUserState } from '../../redux/state/user.state';\nimport Sidebar from \"../../components/Dashboard/Sidebar\";\nimport Content from \"../../components/Dashboard/Content\";\nimport Header from \"../../components/Dashboard/Header\";\n\ninterface IProps {\n  loading: boolean,\n  userData: TUserState,\n  fnLogout: () => void,\n}\n\nconst Dashboard = ({ loading, userData, fnLogout }: IProps) => {\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <CssBaseline />\n      <Header loading={loading} userData={userData} fnLogout={fnLogout} />\n      <Sidebar />\n      <Content />\n    </Box>\n  );\n}\n\nexport default Dashboard;","import React, { useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n\nimport { auth, getUser } from \"../../database\";\nimport { logout } from '../../redux/api'\nimport { storeUserData } from \"../../redux/actions/user.actions\";\nimport { selectUser } from \"../../redux/selectors\";\nimport { history } from \"../../redux\";\nimport { LOGIN_PATH } from \"../../utils/const\";\n\nimport Dashboard from \"./Dashboard\";\n\nconst DashboardPage = () => {\n\n  const [user, loading] = useAuthState(auth);\n  const dispatch = useDispatch();\n  const userData = useSelector(selectUser)\n\n  const memoFetchUserData = useCallback(async () => {\n    try {\n      if(!user) return\n      const userData = await getUser(user.uid)\n      if(!userData) return;\n      const { email, firstName, lastName } = userData\n      dispatch(storeUserData({ email, firstName, lastName }))\n    } catch (err) {\n      console.error(err);\n    }\n  }, [dispatch, user]);\n\n  useEffect(() => {\n    if (loading) return;\n    if (!user) return history.push(LOGIN_PATH)\n    memoFetchUserData();\n  }, [user, loading, memoFetchUserData]);\n\n  const handleLogout = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <Dashboard\n      loading={loading}\n      userData={userData}\n      fnLogout={handleLogout}\n    />\n  );\n}\n\nexport default DashboardPage;","import React from 'react'\nimport DashboardPage from '../containers/DashboardPage'\n\nconst DashboardRoute = () => {\n  return <DashboardPage />\n}\n\nexport default DashboardRoute"],"sourceRoot":""}